<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.entity.dao.AppLoginMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.po.AppLogin">
    <id column="login_id" jdbcType="INTEGER" property="login_id" />
    <result column="login_name" jdbcType="VARCHAR" property="login_name" />
    <result column="login_password" jdbcType="VARCHAR" property="login_password" />
    <result column="login_tell" jdbcType="VARCHAR" property="login_tell" />
    <result column="login_type" jdbcType="VARCHAR" property="login_type" />
    <result column="u_id" jdbcType="INTEGER" property="u_id" />
  </resultMap>
  <sql id="Base_Column_List">
    login_id, login_name, login_password, login_tell, login_type, u_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_info
    where login_id = #{login_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_info
    where login_id = #{login_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.entity.po.AppLogin">
    insert into login_info (login_id, login_name, login_password, 
      login_tell, login_type, u_id
      )
    values (#{login_id,jdbcType=INTEGER}, #{login_name,jdbcType=VARCHAR}, #{login_password,jdbcType=VARCHAR}, 
      #{login_tell,jdbcType=VARCHAR}, #{login_type,jdbcType=VARCHAR}, #{u_id,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.po.AppLogin">
    insert into login_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="login_id != null">
        login_id,
      </if>
      <if test="login_name != null">
        login_name,
      </if>
      <if test="login_password != null">
        login_password,
      </if>
      <if test="login_tell != null">
        login_tell,
      </if>
      <if test="login_type != null">
        login_type,
      </if>
      <if test="u_id != null">
        u_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="login_id != null">
        #{login_id,jdbcType=INTEGER},
      </if>
      <if test="login_name != null">
        #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="login_password != null">
        #{login_password,jdbcType=VARCHAR},
      </if>
      <if test="login_tell != null">
        #{login_tell,jdbcType=VARCHAR},
      </if>
      <if test="login_type != null">
        #{login_type,jdbcType=VARCHAR},
      </if>
      <if test="u_id != null">
        #{u_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.po.AppLogin">
    update login_info
    <set>
      <if test="login_name != null">
        login_name = #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="login_password != null">
        login_password = #{login_password,jdbcType=VARCHAR},
      </if>
      <if test="login_tell != null">
        login_tell = #{login_tell,jdbcType=VARCHAR},
      </if>
      <if test="login_type != null">
        login_type = #{login_type,jdbcType=VARCHAR},
      </if>
      <if test="u_id != null">
        u_id = #{u_id,jdbcType=INTEGER},
      </if>
    </set>
    where login_id = #{login_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.po.AppLogin">
    update login_info
    set login_name = #{login_name,jdbcType=VARCHAR},
      login_password = #{login_password,jdbcType=VARCHAR},
      login_tell = #{login_tell,jdbcType=VARCHAR},
      login_type = #{login_type,jdbcType=VARCHAR},
      u_id = #{u_id,jdbcType=INTEGER}
    where login_id = #{login_id,jdbcType=INTEGER}
  </update>
</mapper>